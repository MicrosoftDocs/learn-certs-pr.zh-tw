### YamlMime:Course
title: Programming in C#
metadata:
  title: 'Course 20483-C: Programming in C#'
  description: 'Course 20483-C: Programming in C#'
uid: course.20483
courseNumber: '20483-C'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 描述 Visual C#的核心語法和功能。
- skill: 建立方法，處理異常並描述大型應用程式的監視需求。
- skill: 實作典型桌面應用程式的基本結構和必要元素。
- skill: 建立類，定義和實作介面，以及建立和使用通用集合。
- skill: 使用繼承來建立類層次結構並擴展 .NET Framework 類。
- skill: 透過使用檔案輸入/輸出和資料流來讀取和寫入資料，並以不同的格式序列化和反序列化資料。
- skill: 建立並使用實體資料模型來存取資料庫，並使用 LINQ 查詢資料。
- skill: 透過使用 System.Net 命名空間和 WCF 資料服務中的類型存取和查詢遠端資料。
- skill: 透過使用 XAML 構建圖形用戶介面。
- skill: 透過使用任務和異步操作來提高應用程式的吞吐量和響應時間。
- skill: 將非託管庫和動態元件集成到 Visual C# 應用程式中。
- skill: 透過使用反射檢查類型的元資料，建立和使用自定義屬性，在運行時生成代碼，以及管理程式集版本。
- skill: 透過使用對稱和非對稱加密來加密和解密資料。
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- intermediate
roles:
- developer
products:
- vs
exams:
- uid: exam.70-483
summary: |-
  本培訓課程向開發人員教授開發人員使用 Visual C# 語言建立 Windows 應用程式所需的編程技能。在課堂上的五天時間裡，學生回顧 Visual C#程式結構、語言語法和實作細節的基礎，然後在構建包含 .NET Framework 4.7 幾個功能的應用程式的整個星期中鞏固他們的知識。

  #### 對象設定檔
  本課程面向經驗豐富的開發人員，這些開發人員已經具有 C，C++，JavaScript，Objective-C，Microsoft Visual Basic 或 Java 的編程經驗，並且了解面向對象編程的概念。本課程不適用於編程新手；它面向具有至少一個月的面向對象環境編程經驗的專業開發人員。
prerequisitesSection: |-
  參加本課程的開發人員應該已經在使用 C# 完成基本編程任務方面獲得了有限的經驗。更具體地說，學生應該具有使用 C# 的實作經驗，以證明他們對以下方面有所理解&#58;
  - 如何在應用程式中命名、聲明、初始化值並將值分配給變量。
  - 使用方法&#58;算術運算符，執行涉及一個或多個變量的算術運算；關係運算符，用於測試兩個變量或表達式之間的關係；邏輯運算符，用於合併包含關係運算符的表達式。
  - 如何使用 C# 語言關鍵字為簡單的編程語句建立代碼語法，以及如何使用 Visual Studio IDE 識別語法錯誤。
  - 如何使用 IF 語句建立簡單的分支結構。
  - 如何使用 For 語句建立簡單的循環結構以遍歷資料數組。
  - 如何使用 Visual Studio IDE 定位簡單的邏輯錯誤。
  - 如何建立一個接受參數(參數並返回指定類型的值)的函數。
  - 如何使用 Visual Studio 工具箱中的標準控件設計和構建簡單的用戶介面。
  - 如何連接到 SQL Server 資料庫以及如何檢索和存儲資料的基礎知識。
  - 如何在循環中排序資料。
  - 如何識別程式中使用的類和方法。
outlineSection: |-
  ### 模組 1&#58; Visual C# 語法綜述
  Microsoft .NET Framework 4.7 版提供了一個全面的開發平台，您可以使用該平台來構建、部署和管理應用程式和服務。透過使用 .NET Framework，您可以建立視覺上引人注目的應用程式，實作跨技術邊界的無縫通信，並為廣泛的業務流程提供支援。

  在本模組中，您將了解 .NET Framework 和 Microsoft Visual Studio 提供的一些核心功能。您還將學習一些使您能夠開始開發 .NET Framework 應用程式的核心 Visual C# 構造。

  #### 課程
  - 使用 Visual C# 編寫應用程式概述
  - 資料類型，運算符和表達式
  - Visual C# 編程語言構造


  #### 實驗室&#58; 為學生列表實作編輯功能
  - 為學生名單實作插入功能
  - 為學生名單實作刪除功能
  - 顯示學生的年齡

  完成本單元後，學生將能夠&#58;
  - 描述 .NET Framework 應用程式的體系結構以及 Visual Studio 2017 和 Visual C# 提供的功能。
  - 使用基本的 Visual C# 資料類型、運算符和表達式。
  - 使用標準的 Visual C# 構造。

  ### 模組 2&#58; 建立方法，處理異常和監視應用程式
  應用程式通常由執行特定功能的功能邏輯單元組成，例如提供對資料的存取或觸發某些邏輯處理。Visual C# 是一種面向對象的語言，它使用方法概念來封裝功能的邏輯單元。方法可以很簡單也可以很複雜，隨您喜歡，因此，重要的是要考慮在方法中發生異常時應用程式的狀態會發生什麼。

  在本模組中，您將學習如何建立和使用方法以及如何處理異常。您還將學習如何使用日誌記錄和跟踪來記錄發生的任何異常的詳細信息。

  #### 課程
  - 建立和調用方法
  - 建立重載的方法並使用可选和輸出參數
  - 處理異常
  - 監視應用


  #### 實驗室&#58; 擴展類註冊應用程式功能
  - 重構註冊碼
  - 驗證學生信息
  - 將更改保存到類表

  完成本單元後，學生將能夠&#58;
  - 建立和調用方法。
  - 建立重載的方法並使用可選參數。
  - 處理異常。
  - 透過使用日誌記錄、跟踪和分析來監視應用程式

  ### 模組 3&#58; Visual C# 的基本類型和構造
  若要使用 Windows Presentation Foundation(WPF)或其他 .NET Framework 平台建立有效的應用程式，必須首先學習一些基本的 Visual C# 構造。您需要知道如何建立簡單的結構來表示正在使用的資料項。您需要知道如何將這些結構組織到集合中，以便可以添加項目、檢索項目以及對項目進行迭代。最後，您需要知道如何訂閱事件，以便可以響應用戶的操作。

  在本模組中，您將學習如何建立和使用結構和枚舉，將資料組織到集合中以及建立和訂閱事件。

  #### 課程
  - 實作結構和枚舉
  - 將資料整理到集合中
  - 處理事件


  #### 實驗室&#58; 編寫成績原型應用程式的代碼
  - 將導航邏輯添加到成績原型應用程式中
  - 建立資料類型以存儲用戶和成績信息
  - 顯示用戶和成績信息

  完成本單元後，學生將能夠&#58;
  - 建立和使用結構和枚舉。
  - 使用集合類來組織資料。
  - 建立並訂閱事件。

  ### 模組 4&#58; 建立類和實作類型安全的集合
  在本模組中，您將學習如何使用介面和類來定義和建立自己的自定義可重用類型。您還將學習如何建立和使用任何類型的可枚舉、類型安全的集合。
  #### 課程
  - 建立類
  - 定義和實作介面
  - 實作類型安全的集合


  #### 實驗室&#58; 向應用程式添加資料驗證和類型安全
  - 將教師、學生和成績結構實作為類
  - 將資料驗證添加到成績類
  - 按姓名順序顯示學生
  - 使教師能夠修改類和成績資料

  完成本模組後，您將能够&#58;
  - 建立和實例化類。
  - 建立和實例化介面。
  - 使用泛型建立類型安全的集合。


  ### 模組 5&#58; 使用繼承建立類層次結構
  在本模組中，您將學習如何使用繼承來建立類層次結構並擴展 .NET Framework 類型。
  #### 課程
  - 建立類層次結構
  - 擴展 .NET Framework 類


  #### 實驗室&#58; 將通用功能重構到用戶類中
  - 將通用功能重構為用戶類
  - 使用抽象方法實作密碼複雜性
  - 建立 ClassFullException 自定義異常

  完成本模組後，您將能够&#58;
  - 透過使用繼承建立基類和派生類。
  - 建立從 .NET Framework 類繼承的類。


  ### 模組 6&#58; 讀寫本地資料
  在本模組中，您將學習如何透過使用事務性檔案系統 I / O 操作來讀取和寫入資料，如何將資料序列化和反序列化到檔案系統，以及如何使用流來讀取和寫入資料到檔案系統。
  #### 課程
  - 讀寫檔案
  - 序列化和反序列化資料
  - 使用流執行 I / O


  #### 實驗室&#58; 生成成績報告
  - 將成績報告的資料序列化為 XML
  - 預覽成績報告
  - 將序列化成績資料保存到檔案

  完成本模組後，您將能够&#58;
  - 透過使用檔案I/O在檔案系統中讀寫資料。
  - 將資料轉換為可以寫入檔案或其他資料源或從中讀取的格式。
  - 使用流向檔案或資料源發送資料或從檔案或資料源接收資料。


  ### 模組 7&#58; 存取資料庫
  在本模組中，您將學習如何建立和使用實體資料模型(EDM)，以及如何使用語言集成查詢(LINQ)來查詢多種類型的資料。
  #### 課程
  - 建立和使用實體資料模型
  - 使用 LINQ 查詢資料


  #### 實驗室&#58; 檢索和修改成績資料
  - 從美術學院資料庫建立實體資料模型
  - 使用實體框架更新學生和成績資料
  - 擴展實體資料模型以驗證資料

  完成本模組後，您將能够&#58;
  - 建立、使用和自定義 EDM。
  - 使用 LINQ 查詢資料。


  ### 模組 8&#58; 存取遠端資料
  在本模組f中，您將學習如何使用 System.Net 命名空間中的請求和響應類直接操作遠端資料源。您還將學習如何使用 Windows Communication Foundation(WCF)資料服務透過 Web 公開和使用實體資料模型(EDM)。
  #### 課程
  - 跨網頁存取資料
  - 使用 Odata 連接的服務存取資料


  #### 實驗室&#58; 遠端檢索和修改成績資料
  - 為 SchoolGrades 資料庫建立 WCF 資料服務
  - 將資料服務集成到應用程式中
  - 透過網頁檢索學生照片(如果時間允許)

  完成本模組後，您將能够&#58;
  - 向 Web 服務和其他遠端資料源發送資料並從中接收資料。
  - 使用 WCF 資料服務存取資料。


  ### 模組 9&#58; 為圖形應用程式設計用戶介面
  在本模組中，您將學習如何使用可擴展應用程式標記語言(XAML)和 Windows Presentation Foundation(WPF)建立引人入勝的 UI。
  #### 課程
  - 使用 XAML 設計用戶介面
  - 將控件綁定到資料


  #### 實驗室&#58; 自定義學生照片並設置應用程式樣式
  - 自定義學生照片的外觀
  - 設置登錄視圖的樣式
  - 對 StudentPhoto 控件進行動畫處理(如果時間允許)

  完成本模組後，您將能够&#58;
  - 使用 XAML 設計 UI 。
  - 將 XAML 控件綁定到資料。
  - 將樣式應用於 XAML UI。


  ### 模組 10&#58; 提高應用程式效能和響應能力
  在本模組中，您將學習如何透過在多個線程之間分佈操作來提高應用程式的效能。
  #### 課程
  - 實作多任務
  - 異步執行操作
  - 同步並發存取資料


  #### 實驗室&#58; 提高應用程式的響應能力和效能
  - 確保在檢索教師資料時 UI 保持響應
  - 在長期運行過程中提供視覺反饋

  完成本模組後，您將能够&#58;
  - 使用任務並行庫來實作多任務操作。
  - 執行長時間運行的操作而不會阻塞線程。
  - 控制多個線程可以同時存取資源的方式。


  ### 模組 11&#58; 與非託管代碼集成
  在本模組中，您將學習如何在應用程式中互操作非託管代碼，以及如何確保代碼釋放任何非託管資源。
  #### 課程
  - 建立和使用動態對象
  - 管理對象的生命週期並控制非託管資源


  #### 實驗室&#58; 升級成績報告
  - 使用 Word 生成成績報告
  - 透過實作處置模式來控制 Word 對象的生命週期

  完成本模組後，您將能够&#58;
  - 透過使用動態語言運行時(DLR)將非託管代碼集成到 Microsoft Visual C# 應用程式中。
  - 控制非託管資源的生命週期，並確保您的應用程式釋放資源。


  ### 模組 12&#58; 建立可重用的類型和程式集
  在本模組中，您將學習如何透過反射使用現有的程式集，以及如何透過使用屬性向類型和類型成員添加其他元資料。您還將學習如何透過使用代碼文檔對像模型(CodeDOM)在運行時生成代碼，以及如何透過使用全局程式集緩存(GAC)來確保對程式集進行簽名和版本控制以及對其他應用程式可用。
  #### 課程
  - 檢查對像元資料
  - 建立和使用自定義屬性
  - 生成託管代碼
  - 對程式集進行版本控制、簽名和部署


  #### 實驗室&#58; 指定要包含在成績報告中的資料
  - 建立和應用 IncludeInReport 屬性
  - 更新報告
  - 集中存儲 Grades.Utilities 程式集(如果時間允許)

  完成本模組後，您將能够&#58;
  - 使用反射來檢查和執行程式集。
  - 建立和使用自定義屬性。
  - 使用 CodeDOM 在運行時生成託管代碼。
  - 對程式集進行版本控制、簽名並部署到 GAC。


  ### 模組 13&#58; 加密和解密資料
  在本模組中，您將學習如何實作對稱和非對稱加密，以及如何使用哈希來生成資料的數學表示。您還將學習如何建立和管理 X509 證書，以及如何在非對稱加密過程中使用它們。
  #### 課程
  - 實作對稱加密
  - 實作非對稱加密


  #### 實驗室&#58; 加密和解密成績報告
  - 加密成績報告
  - 加密成績報告

  完成本模組後，您將能够&#58;
  - 透過使用對稱加密來加密資料。
  - 透過使用非對稱加密來加密數據。

