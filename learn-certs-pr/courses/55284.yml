### YamlMime:Course
title: Introduction to Python
metadata:
  title: 'Course 55284-A: Introduction to Python'
  description: 'Course 55284-A: Introduction to Python'
uid: course.55284
courseNumber: '55284-A'
hoursToComplete: 96
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: 理解 Python 如何運行及其適用於什麼。
- skill: 理解 Python 在程式設計語言領域中的地位。
- skill: 在 Python 中工作及熟練操作字串。
- skill: 使用 Python 執行數學運算。
- skill: 使用 Python 序列：清單、陣列、字典和集合。
- skill: 收集用戶的輸入和輸出結果。
- skill: 在 Python 中執行流程進程。
- skill: 使用 Python 從檔中讀取和寫入。
- skill: 在 Python 中寫入功能。
- skill: 處理 Python 中的異常。
- skill: 在 Python 中使用日期和時間。
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- beginner
roles:
- developer
summary: |-
  在此為期4天的 Python 培訓課程中，學生將學習在 Python 中進行程式設計。該課程針對在其他程式設計語言方面有或者沒有經驗且對該語言不熟悉的學生。
  該 Python 課程使用 Python 3 進行教學；但是， Python 2 和 Python 3 之間的不同之處也會被指出。對於 Python 私人班級，我們的講師會具體專注於 Python 2，如學生希望的話。

  #### 受眾概覽
  該課程旨在針對希望學習 Python 的學生。一些程式設計的經驗是有幫助但不是必須的。
prerequisitesSection: |-
  一些程式設計的經驗是有幫助但不是必須的。
outlineSection: |-
  ### 模組 1&#58; Python 基礎
  Python， 首次出現於1991年，是已使用中最流行的程式設計語言。Python 是一種高級的程式設計語言，意味著它使用了相對人類可閱讀的語法，由 Python 解譯器翻譯為您的電腦能夠理解的語言。 其他流行的高級程式設計語言有 C#、Objective-C、Java、PHP 和 JavaScript。有趣的是，所有這些其他程式設計語言都不像 Python 那樣，使用 C 語言的語法。如果您使用這些語言中的一種或多種，您可能會發現 Python 的語法有些奇怪。但是，如果花一點時間。您會發現它是對程式師非常友好的。

  #### 課程
  - 運行 Python
  - 你好，世界！
  - 常量
  - Python 注釋
  - 變數
  - 編寫 Python 模組
  - 列印() 功能
  - 收集用戶輸入
  - 獲得幫助


  #### 實驗室 &#58; 該課程中的練習
  - 你好，世界
  - 探索資料類型
  - 簡單的 Python 腳本

  完成此模組後，學生將能夠&#58;
  - 理解 Python如何工作。
  - 理解 Python 在程式設計語言領域中的地位。
  - 理解 Python 3.x 和 Python 2.x 之間的不同之處。
  - 理解變數和 Python 的資料類型。
  - 新建簡單的模組。
  - 在 Python 上獲得説明


  ### 模組 2&#58; 函數和模組
  該模組解釋了如何使用函數和模組。
  #### 課程
  - 定義功能
  - 作用域
  - 全域變數
  - 函數參數
  - 返回值
  - 導入模組


  #### 實驗室 &#58; 本課練習
  - 有參數的函數
  - 有預設值的參數

  完成此模組後，學生將能夠&#58;
  - 定義和調用函數。
  - 定義在站位元參數到函數中的參數。
  - 為參數設定預設值。
  - 理解作用域。
  - 從函數返回值。
  - 新建和導入模組。


  ### 模組 3&#58; 運算
  Python 包含內置數學函數和一些額外的提供擴展的數學（和相關的）函數的內置的庫。在此課程中，我們將涵蓋內置函數和運算及隨機庫。

  #### 課程
  - 算數運算子
  - 設定運算子
  - 內置數學函數
  - 數學模組
  - 隨機模組


  #### 實驗室 &#58; 本課練習
  - 整除和取模函數
  - 幾個披薩夠我們吃

  完成此模組後，學生將能夠&#58;
  - 在 Python 中做基礎數學
  - 為其他的數學運算使用數學模組。
  - 使用隨機模組生成亂數字。


  ### 模組 4&#58; Python 字串
  Python 包含內置數學函數和一些額外的提供擴展的數學（和相關的）函數的內置的庫。在此課程中，我們將涵蓋內置函數和運算及隨機庫。

  #### 課程
  - 引號和特殊符號
  - 字串索引
  - 切片字串
  - 串聯和重複
  - 常見的字串方法
  - 字串格式化
  - 格式化字串常量（f-字串） 
  - 內置字串函數


  #### 實驗室 &#58; 本課練習
  - 索引字串
  - 其誒按字串
  - 重複
  - 執行格式化
  - 熟悉 f-字串
  - 輸出定位字元分隔的文本

  完成此模組後，學生將能夠&#58;
  - 使用字串。
  - 轉義特殊字元
  - 使用多行字串。
  - 索引和切片字串。
  - 使用常見的字串運算子和方法。
  - 設置字串格式。
  - 使用內置字串函數


  ### 模組 5&#58; 常量&#58; 序列、字典和集合
  常量是一種可以一次返回它的一個成員的物件。我們在此課程中將要介紹的常量是列表、元組、範圍、字典和集合。

  #### 課程
  - 定義
  - 序列
  - 解壓序列
  - 字典
  - len() 函數
  - 集合
  - *args 和 **kwargs


  #### 實驗室 &#58; 本課練習
  - 刪除並返回隨機元素
  - 簡單的石頭、剪刀、布遊戲
  - 切片序列
  - 從使用者輸入中新建字典

  完成此模組後，學生將能夠&#58;
  - 理解 Python 中可用的不同類型常量
  - 創建、修改和使用列表。
  - 創建並使用類型。
  - 創建範圍。
  - 創建、修改和使用字典
  - 創建集合並使用集合移除清單中的重複項
  - 理解 *args 和 **kwargs參數。


  ### 模組 6&#58; 流程控制
  通常，程式是逐行按照順序運行。我們已經知道我們可以通過調用函數來改變這種流程。也可以使用條件陳述式和迴圈來改變流程。

  #### 課程
  - 條件陳述式
  - Python 中的迴圈
  - 跳出和繼續
  - enumerate() 函數
  - 生成器
  - 清單生成式


  #### 實驗室 &#58; 本課練習
  - 所有元素為真和任意元素為真
  - 彩瓷遊戲
  - 找針遊戲
  - 擲骰子

  完成此模組後，學生將能夠&#58;
  - 在 Python 中使用如果條件陳述式。
  - 在 Python 中使用迴圈。
  - 創建生成器函數
  - 使用清單生成式


  ### 模組 7&#58; 虛擬環境
  虛擬環境是 Python 開發平臺在您電腦上的一個容器。 安裝包可以安裝到與您標準的或非虛擬環境的虛擬環境中。

  #### 課程
  - 虛擬環境


  #### 實驗室 &#58; 本課練習
  - 使用虛擬環境

  完成此模組後，學生將能夠&#58;
  - 理解虛擬環境是什麼。
  - 創建虛擬環境。
  - 啟動和取消啟動虛擬環境。
  - 刪除虛擬環境。


  ### 模組 8&#58; 規則運算式
  規則運算式在很多程式設計語言中包括 Java、PHP、JavaScript、C、C++ 和 Perl 被用來做模式匹配。我們將簡要介紹規則運算式，然後向您展示如何在 Python 中使用它們。

  #### 課程
  - 規則運算式語法
  - Python 處理規則運算式的方式

  完成此模組後，學生將能夠&#58;
  - 為模式匹配創建規則運算式。
  - 在 Python 中使用規則運算式。


  ### 模組 9&#58; Unicode 編碼和編碼方式
  該模組解釋了如何使用 Unicode 編碼和編碼方式。
  #### 課程
  - Bits（位元）與 Bytes（位元組）
  - 十六進位數
  - 編碼


  #### 實驗室 &#58; 本課練習
  - 在數位系統中轉換數位類型
  - 查找易混淆字元

  完成此模組後，學生將能夠&#58;
  - 理解二進位數字和十六進位數。
  - 在數位系統中轉換數位類型。


  ### 模組 10&#58; 檔處理
  Python 讓您能夠在作業系統上訪問和修改檔和目錄。

  除此以外，您還可以&#58;
  1.打開新的活現有檔並將其存儲在檔物件變數中。
  2.一次性全部或逐行讀取檔內容。
  3.向檔內容進行追加操作。
  4.覆蓋檔內容。
  5.列出目錄內容。
  6.重命名檔和目錄。

  #### 課程
  - 打開文件
  - os 和 os.path 模組


  #### 實驗室 &#58; 本課練習
  - 在檔中找到文本
  - 向檔寫入
  - 列表生成器

  完成此模組後，學生將能夠&#58;
  - 在作業系統中讀取檔。
  - 在作業系統中創建和寫入檔。
  - 在作業系統中訪問和使用目錄。
  - 使用 os 和 os.path模組。


  ### 模組 11&#58; 異常處理
  該模組解釋了如何在 Python 中處理異常。
  #### 課程
  - 萬用字元異常子句
  - 獲得異常資訊
  - else 子句
  - finally 子句
  - 為流程控制使用異常
  - 引發您自己的異常
  - 異常層次結構


  #### 實驗室 &#58; 本課練習
  - 引發異常
  - 求和運算

  完成此模組後，學生將能夠&#58;
  - 處理中 Python 的異常。


  ### 模組 12&#58; Python 日期和時間
  該模組解釋了如何使用 Python日期和時間。
  #### 課程
  - 理解時間
  - 時間模組
  - 日期模組


  #### 實驗室 &#58; 本課練習
  - 出站時間報告

  完成此模組後，學生將能夠&#58;
  - 使用時間模組。
  - 使用日期時間模組。


  ### 模組 13&#58; 從命令列運行 Python 腳本
  該模組解釋了如何從命令列運行 Python 腳本。
  #### 課程
  - sys.arg
  - sys.path


  #### 實驗室 &#58; 本課練習
  - 使用 Windows Easy Transfer 遷移設置
  - 配置 Windows 7 的參考圖像
  - 配置參考圖像

  完成此模組後，學生將能夠&#58;
  - 從命令列運行 Python 腳本。

  #### 補充閱讀
  無